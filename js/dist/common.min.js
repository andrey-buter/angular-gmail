"use strict";var app=angular.module("gmailApp",["ui.router"]);app.config(function($stateProvider){$stateProvider.state("home",{url:"/",template:"<inbox></inbox>"}).state("spam",{url:"/spam",template:"<spam></spam>"})}),app.service("dbJsRuService",function($http){var URL="http://test-api.javascript.ru/v1/andrey-buter-1";this.getAll=function(model){return $http.get(URL+"/"+model).then(function(response){return response.data})},this.add=function(model,data){return $http.post(URL+"/"+model,data).then(function(response){return response.data})},this.update=function(model,id,data){return $http.patch(URL+"/"+model+"/"+id,data).then(function(response){return response.data})},this.delete=function(model,id){return $http.delete(URL+"/"+model+"/"+id)},this.deleteAll=function(model){return $http.delete(URL+"/"+model)}}).service("dbLocalService",function(){var _this=this;this.getAll=function(model){return new Promise(function(resolve){var data=window.localStorage.getItem(model);data=data?JSON.parse(data):[],setTimeout(function(){resolve(data)},0)})},this.add=function(model,data){return _this.getAll(model).then(function(saved){var item=angular.extend({},data);return item._id=++saved.length,saved=saved.slice(0,-1),0==saved.length?saved=[item]:saved.push(item),window.localStorage.setItem(model,JSON.stringify(saved)),item})},this.update=function(model,id,data){return _this.getAll(model).then(function(saved){angular.forEach(saved,function(item,key){if(id==item._id)return saved[key]=data,window.localStorage.setItem(model,JSON.stringify(saved)),data})})},this.delete=function(model,id){return _this.getAll(model).then(function(saved){var i=void 0;angular.forEach(saved,function(item,key){id==item._id&&(i=key)})})},this.deleteAll=function(model){return new Promise(function(resolve){window.localStorage.removeItem(model),setTimeout(function(){resolve("")},0)})}}).service("dbService",function(dbJsRuService,dbLocalService){var _this2=this,serverType="local";this.local=dbLocalService,this.jsru=dbJsRuService,this.getAll=function(model){return _this2[serverType].getAll(model)},this.add=function(model,data){return _this2[serverType].add(model,data)},this.update=function(model,id,data){return _this2[serverType].update(model,id,data)},this.delete=function(model,id){return _this2[serverType].delete(model,id)},this.deleteAll=function(model){return _this2[serverType].deleteAll(model)}}),app.service("mailBoxService",function(dbService){var MODEL="mailboxes",TITLE="gmail",id=!1;this.getId=function(){return id},this.init=function(){return dbService.getAll(MODEL).then(function(data){return 0<data.length?data:dbService.add(MODEL,{title:TITLE})}).then(function(data){return id=angular.isArray(data)?data[0]._id:data._id})}}).service("letterService",function($filter,dbService,mailBoxService){var _this3=this,MODEL="letters";this.getAll=function(){return dbService.getAll(MODEL).then(_this3.lettersFromJson)},this.add=function(letter){return letter.body.date=_this3.getCurrentTime(),letter.body.unread=!0,letter.body.draft=!1,letter.mailbox=mailBoxService.getId(),dbService.add(MODEL,_this3.prepareToSave(letter)).then(function(data){return _this3.lettersFromJson([data])[0]})},this.update=function(letter){return dbService.update(MODEL,letter._id,_this3.prepareToSave(letter)).then(function(data){return _this3.lettersFromJson([data])[0]})},this.delete=function(letter){return dbService.delete(MODEL,letter._id).then(function(data){return data})},this.prepareToSave=function(letter){var out=angular.extend({},letter);return out.body=$filter("json")(out.body),out},this.lettersFromJson=function(letters){return letters=angular.forEach(letters,function(val){return val.body=angular.fromJson(val.body),val})},this.defautNewLetter=function(){var self=_this3;return{to:"test@test.com",subject:"subject - "+self.getCurrentTime(),body:{text:"Test text"}}},this.getCurrentTime=function(){return $filter("date")(new Date,"yyyy-MM-dd HH:mm:ss")}}).service("factoryService",function(dbService,mailBoxService,letterService){this.db=dbService,this.mailBox=mailBoxService,this.letter=letterService}),app.component("letter",{bindings:{letter:"<"},templateUrl:"tmpl/letter.html",controller:function(factoryService){var _this4=this;console.log(this.letter),this.open=function(){_this4.openSingle(),!1!==_this4.letter.body.unread&&(_this4.letter.body.unread=!1,factoryService.letter.update(_this4.letter).then(function(data){console.log("success updated"),console.log(data)}))},this.delete=function(){_this4.deleteLetter(),factoryService.letter.delete(_this4.letter).then(function(data){console.log("success removed")})},this.draft=function(){!0!==_this4.letter.body.draft&&(_this4.letter.body.draft=!0,factoryService.letter.update(_this4.letter).then(function(data){console.log("success updated"),console.log(data)}))}}}).component("singleLetter",{bindings:{letter:"<"},templateUrl:"tmpl/opened-letter.html"}).component("gmail",{templateUrl:"tmpl/gmail.html",controller:function(factoryService,$filter){this.writeNew=!1,this.status="list",this.openedLetter={},factoryService.mailBox.init()}}),app.component("inbox",{bindings:{},templateUrl:"tmpl/letters.html",controller:function(factoryService,$filter){var _this5=this;this.letters=[],console.log(123),factoryService.letter.getAll().then(function(data){_this5.letters=data,console.log(_this5.letters)}),this.deleteLetter=function(letter){_this5.letters.splice(_this5.letters.indexOf(letter),1)},this.getUnreadLettersCount=function(){var count=$filter("filter")(_this5.letters,{body:{unread:!0}}).length;return 0==count?"":"("+count+")"}}}),app.component("spam",{templateUrl:"tmpl/spam.html"});