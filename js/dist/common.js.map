{"version":3,"sources":["common.es6.js"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["const app = angular.module( 'gmailApp', ['ui.router'] );\r\n\t\r\napp.config( ($stateProvider) => {\r\n\t$stateProvider\r\n\t\t.state('home', {\r\n\t\t\turl: '/',\r\n\t\t\ttemplate: '<inbox></inbox>',\r\n\t\t})\r\n\t\t.state('spam', {\r\n\t\t\turl: '/spam',\r\n\t\t\ttemplate: '<spam></spam>'\r\n\t\t});\r\n\r\n} )\r\napp\r\n\t.service( 'dbJsRuService', function( $http ) {\r\n\t\tconst URL = 'http://test-api.javascript.ru/v1/andrey-buter-1';\r\n\r\n\t\tthis.getAll = ( model ) => $http.get( `${URL}/${model}` ).then( response => response.data ); \r\n\r\n\t\tthis.add = ( model, data ) => $http.post( `${URL}/${model}`, data ).then( response => response.data );\r\n\r\n\t\tthis.update = ( model, id, data ) => $http.patch( `${URL}/${model}/${id}`, data ).then( (response) => {\r\n\t\t\treturn response.data;\r\n\t\t} );\r\n\r\n\t\tthis.delete = ( model, id ) => $http.delete( `${URL}/${model}/${id}` );\r\n\r\n\t\tthis.deleteAll = ( model ) => $http.delete( `${URL}/${model}` );\r\n\t})\r\n\t.service( 'dbLocalService', function() {\r\n\t\tthis.getAll = ( model ) => new Promise( (resolve) => {\r\n\t\t\tlet data = window.localStorage.getItem( model );\r\n\r\n\t\t\tdata = !data ? [] : JSON.parse( data );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tresolve( data );\r\n\t\t\t}, 0);\r\n\t\t});\r\n\r\n\t\tthis.add = ( model, data ) => this.getAll( model ).then( (saved) => {\r\n\t\t\tlet item = angular.extend({},data);\r\n\r\n\t\t\titem._id = ++saved.length;\r\n\r\n\t\t\tsaved = saved.slice( 0, -1 );\r\n\r\n\t\t\tif ( 0 == saved.length )\r\n\t\t\t\tsaved = [ item ];\r\n\t\t\telse\r\n\t\t\t\tsaved.push( item );\r\n\r\n\t\t\twindow.localStorage.setItem( model, JSON.stringify( saved ) );\r\n\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\tthis.update = ( model, id, data ) => this.getAll( model ).then( (saved) => {\r\n\t\t\tangular.forEach( saved, (item, key) => {\r\n\t\t\t\tif ( id != item._id ) \r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tsaved[ key ] = data;\r\n\r\n\t\t\t\twindow.localStorage.setItem( model, JSON.stringify( saved ) );\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\tthis.delete = ( model, id ) => this.getAll( model ).then( (saved) => {\r\n\t\t\tlet i;\r\n\r\n\t\t\tangular.forEach( saved, ( item, key ) => {\r\n\t\t\t\tif ( id != item._id ) \r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\ti = key;\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\t// delete saved[ saved ]\r\n\t\t})\r\n\r\n\t\tthis.deleteAll = ( model ) => new Promise( ( resolve ) => {\r\n\t\t\twindow.localStorage.removeItem( model );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tresolve( '' );\r\n\t\t\t}, 0);\r\n\t\t});\r\n\t})\r\n\t.service( 'dbService', function( dbJsRuService, dbLocalService ) {\r\n\t\tconst serverType = 'local';\r\n\r\n\t\tthis.local = dbLocalService;\r\n\t\tthis.jsru  = dbJsRuService;\r\n\r\n\r\n\t\tthis.getAll = ( model ) => {\r\n\t\t\treturn this[ serverType ].getAll( model );\r\n\t\t}\r\n\t\tthis.add = ( model, data ) => {\r\n\t\t\treturn this[ serverType ].add( model, data );\r\n\t\t}\r\n\t\tthis.update = ( model, id, data ) => {\r\n\t\t\treturn this[ serverType ].update( model, id, data );\r\n\t\t}\r\n\t\tthis.delete = ( model, id ) => {\r\n\t\t\treturn this[ serverType ].delete( model, id );\r\n\t\t}\r\n\r\n\t\tthis.deleteAll = ( model ) => {\r\n\t\t\treturn this[ serverType ].deleteAll( model );\r\n\t\t}\r\n\t})\r\n\r\napp\r\n\t.service( 'mailBoxService', function( dbService ) {\r\n\t\tconst MODEL = 'mailboxes';\r\n\t\tconst TITLE = 'gmail';\r\n\r\n\t\tlet id = false;\r\n\r\n\t\t// dbService.deleteAll( MODEL );\r\n\t\t\r\n\t\tthis.getId = () => id;\r\n\r\n\t\tthis.init = () => {\r\n\t\t\treturn dbService.getAll( MODEL )\r\n\t\t\t\t.then( ( data ) => {\r\n\t\t\t\t\t// console.log('mailBox getAll')\r\n\t\t\t\t\t// console.log(data)\r\n\t\t\t\t\tif ( 0 < data.length ) \r\n\t\t\t\t\t\treturn data;\r\n\r\n\t\t\t\t\t// создаем новый mailbox\r\n\t\t\t\t\treturn dbService.add( MODEL, { title: TITLE } );\r\n\t\t\t\t})\r\n\t\t\t\t.then( ( data ) => {\r\n\t\t\t\t\tif ( angular.isArray( data ) )\r\n\t\t\t\t\t\tid = data[0]._id;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tid = data._id;\r\n\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t});\r\n\t\t}\r\n\t})\r\n\t.service( 'letterService', function( $filter, dbService, mailBoxService ) {\r\n\t\tconst MODEL = 'letters';\r\n\r\n\t\t// dbService.deleteAll( MODEL );\r\n\r\n\t\tthis.getAll = () => {\r\n\t\t\treturn dbService\r\n\t\t\t\t\t.getAll( MODEL )\r\n\t\t\t\t\t.then( this.lettersFromJson );\r\n\t\t}\r\n\r\n\t\tthis.add = ( letter ) => {\r\n\t\t\tletter.body.date   = this.getCurrentTime();\r\n\t\t\tletter.body.unread = true;\r\n\t\t\tletter.body.draft  = false;\r\n\t\t\tletter.mailbox     = mailBoxService.getId();\r\n\r\n\t\t\treturn dbService\r\n\t\t\t\t\t.add( MODEL, this.prepareToSave( letter ) )\r\n\t\t\t\t\t.then( (data) => {\r\n\t\t\t\t\t\treturn this.lettersFromJson( [ data ] )[0];\r\n\t\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.update = ( letter ) => {\r\n\t\t\treturn dbService\r\n\t\t\t\t\t.update( MODEL, letter._id, this.prepareToSave( letter ) )\r\n\t\t\t\t\t.then( (data) => {\r\n\t\t\t\t\t\treturn this.lettersFromJson( [ data ] )[0];\r\n\t\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.delete = ( letter ) => {\r\n\t\t\treturn dbService\r\n\t\t\t\t\t.delete( MODEL, letter._id )\r\n\t\t\t\t\t.then( (data) => {\r\n\t\t\t\t\t\t// console.log(data)\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.prepareToSave = ( letter ) => {\r\n\t\t\tlet out = angular.extend({}, letter);\r\n\r\n\t\t\tout.body = $filter('json')( out.body );\r\n\r\n\t\t\treturn out;\r\n\t\t}\r\n\r\n\t\tthis.lettersFromJson = ( letters ) => {\r\n\t\t\tletters = angular.forEach( letters, function( val ) {\r\n\t\t\t\tval.body = angular.fromJson( val.body );\r\n\r\n\t\t\t\treturn val;\r\n\t\t\t});\r\n\r\n\t\t\treturn letters;\r\n\t\t}\r\n\r\n\t\tthis.defautNewLetter = () => {\r\n\t\t\tlet self = this;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tto: 'test@test.com',\r\n\t\t\t\tsubject: 'subject - ' + self.getCurrentTime(),\r\n\t\t\t\tbody: {\r\n\t\t\t\t\ttext: 'Test text'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getCurrentTime = () => {\r\n\t\t\treturn $filter('date')(new Date(), 'yyyy-MM-dd HH:mm:ss');\r\n\t\t}\r\n\r\n\t\t// this.filterBy = ( arr, prop = {} ) => {\r\n\t\t// \treturn $filter('filter')( arr, prop );\r\n\t\t// }\r\n\t})\r\n\t.service( 'factoryService', function( dbService, mailBoxService, letterService ) {\r\n\t\tthis.db      = dbService;\r\n\t\tthis.mailBox = mailBoxService;\r\n\t\tthis.letter  = letterService;\r\n\t})\r\n\r\napp\r\n\t// .component( 'newMessage', {\r\n\t// \tbindings: {\r\n\t// \t\twriteNew: '=', // двустороннее связыаение, чтоб в gmail.writeNew также менялось состояние\r\n\t// \t\tletters: '=',\r\n\t// \t},\r\n\t// \ttemplateUrl: 'tmpl/new-message.html',\r\n\t// \tcontroller: function( factoryService ) {\r\n\t// \t\tthis.writeNew = false;\r\n\t// \t\tthis.newLetter = factoryService.letter.defautNewLetter();\r\n\r\n\t// \t\tthis.submit = () => {\r\n\t// \t\t\tfactoryService.letter\r\n\t// \t\t\t\t.add( this.newLetter )\r\n\t// \t\t\t\t.then( (data) => {\r\n\t// \t\t\t\t\tthis.letters.push( data );\r\n\t// \t\t\t\t\tthis.newLetter = {};\r\n\t// \t\t\t\t\tthis.writeNew = false;\r\n\t// \t\t\t\t\tconsole.log('email success added')\r\n\t// \t\t\t\t});\r\n\t// \t\t}\r\n\t// \t}\r\n\t// })\r\n\t.component( 'letter', {\r\n\t\tbindings: {\r\n\t\t\tletter: '<',\r\n\t\t // \topenSingle: '&',\r\n\t\t // \tdeleteLetter: '&'\r\n\t\t},\r\n\t\ttemplateUrl: 'tmpl/letter.html',\r\n\t\tcontroller: function( factoryService ) {\r\n\t\t\tconsole.log(this.letter)\r\n\t\t\tthis.open = () => {\r\n\t\t\t\tthis.openSingle();\r\n\r\n\t\t\t\tif ( false === this.letter.body.unread ) \r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tthis.letter.body.unread = false;\r\n\r\n\t\t\t\tfactoryService.letter\r\n\t\t\t\t\t.update( this.letter )\r\n\t\t\t\t\t.then( (data) => {\r\n\t\t\t\t\t\tconsole.log('success updated')\r\n\t\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.delete = () => {\r\n\t\t\t\tthis.deleteLetter();\r\n\r\n\t\t\t\tfactoryService.letter\r\n\t\t\t\t\t.delete( this.letter )\r\n\t\t\t\t\t.then( (data) => {\r\n\t\t\t\t\t\tconsole.log('success removed')\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.draft = () => {\r\n\t\t\t\tif ( true === this.letter.body.draft ) \r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tthis.letter.body.draft = true;\r\n\r\n\t\t\t\tfactoryService.letter\r\n\t\t\t\t\t.update( this.letter )\r\n\t\t\t\t\t.then( (data) => {\r\n\t\t\t\t\t\tconsole.log('success updated')\r\n\t\t\t\t\t\tconsole.log(data)\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\t.component( 'singleLetter', {\r\n\t\tbindings: {\r\n\t\t\tletter: '<',\r\n\t\t},\r\n\t\ttemplateUrl: 'tmpl/opened-letter.html',\r\n\t})\r\n\t.component( 'gmail', {\r\n\t\ttemplateUrl: 'tmpl/gmail.html',\r\n\t\tcontroller: function( factoryService, $filter ) {\r\n\t\t\tthis.writeNew    = false;\r\n\t\t\tthis.status      = 'list';\r\n\t\t\t// this.letters     = [];\r\n\t\t\tthis.openedLetter = {};\r\n\r\n\t\t\tfactoryService.mailBox.init();\r\n\r\n\t\t\t// factoryService.letter.getAll()\r\n\t\t\t// \t.then( (data) => {\r\n\t\t\t// \t\tthis.letters = data;\r\n\t\t\t// \t});\r\n\r\n\t\t\t// this.openLetter = (letter) => {\r\n\t\t\t// \tthis.status       = 'single';\r\n\t\t\t// \tthis.openedLetter = letter;\r\n\t\t\t// }\r\n\t\t\t// this.closeLetter = () => {\r\n\t\t\t// \tthis.status       = 'list';\r\n\t\t\t// \tthis.openedLetter = {};\r\n\t\t\t// }\r\n\t\t\t// this.deleteLetter = (letter) => {\r\n\t\t\t// \tthis.letters.splice(this.letters.indexOf(letter), 1);\r\n\t\t\t// }\r\n\t\t\t// this.getUnreadLettersCount = () => {\r\n\t\t\t// \tlet count = $filter('filter')( this.letters, { body: { unread: true } } ).length;\r\n\r\n\t\t\t// \tif ( 0 == count )\r\n\t\t\t// \t\treturn '';\r\n\r\n\t\t\t// \treturn `(${count})`;\r\n\t\t\t// }\r\n\t\t\t// \r\n\t\t\t// <inbox ng-if=\"'list' == $ctrl.status\"></inbox>\r\n\t\t}\r\n\t})\r\napp\r\n\t.component( 'inbox', {\r\n\t\tbindings: {},\r\n\t\ttemplateUrl: 'tmpl/letters.html',\r\n\t\tcontroller: function( factoryService, $filter ) {\r\n\t\t\tthis.letters = [];\r\n\r\n\t\t\tconsole.log(123)\r\n\r\n\t\t\tfactoryService.letter.getAll()\r\n\t\t\t\t.then( (data) => {\r\n\t\t\t\t\tthis.letters = data;\r\n\t\t\t\t\tconsole.log(this.letters)\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.deleteLetter = (letter) => {\r\n\t\t\t\tthis.letters.splice(this.letters.indexOf(letter), 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.getUnreadLettersCount = () => {\r\n\t\t\t\tlet count = $filter('filter')( this.letters, { body: { unread: true } } ).length;\r\n\r\n\t\t\t\tif ( 0 == count )\r\n\t\t\t\t\treturn '';\r\n\r\n\t\t\t\treturn `(${count})`;\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\napp\r\n\t.component( 'spam', {\r\n\t\ttemplateUrl: 'tmpl/spam.html'\r\n\t})"]}